global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
endglobal

snippet mintex "Minimal template" b
\documentclass[12pt]{article}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsfonts}
\usepackage{amsthm}
\usepackage{mathrsfs}
\usepackage[all]{xy}
\usepackage{asymptote}
\usepackage{graphicx}
\usepackage{float}
\restylefloat{table}
\usepackage{verbatim}
\usepackage[margin=1in]{geometry}
\begin{document}
$0
\end{document}
endsnippet

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage[dutch]{babel}
\usepackage{amsmath, amssymb}


% figure support
\usepackage{import}
\usepackage{xifthen}
\pdfminorversion=7
\usepackage{pdfpages}
\usepackage{transparent}
\newcommand{\incfig}[1]{%
	\def\svgwidth{\columnwidth}
	\import{./figures/}{#1.pdf_tex}
}

\pdfsuppresswarningpagegroup=1

\begin{document}
\begin{flushright}
	Lingfeng Ren\\\\
	`date +%F` \\\\
	$1
\end{flushright}

\begin{center}
\large $2
\end{center}

	$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])vec" "vector" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

snippet splitali "Side by side align" bA
\begin{tabular}{p{8cm}p{8cm}}
{\begin{align*}
$1
\end{align*}}
&
{\begin{align*}
$2
\end{align*} }
\end{tabular}
$0
endsnippet

context "not math()"
snippet box "Box"
$\boxed{$1}$
endsnippet

context "math()"
snippet box "Box" iA
\boxed{$1}
endsnippet

snippet in "indent"
\indent 
endsnippet

snippet ni "no indent"
\noindent 
endsnippet

snippet inn "indent"
\indent\indent 
endsnippet

snippet innn "indent"
\indent\indent\indent 
endsnippet

snippet sk "small skip"

\smallskip

endsnippet

snippet mk "medium skip"

\medskip

endsnippet

snippet bk "big skip"

\bigskip

endsnippet

context "math()"
snippet space "Inline whitespace" i
\hspace{${1:1}cm}
endsnippet

context "not math()"
snippet space "Inline whitespace" i
$\hspace{${1:1}cm}$
endsnippet

context "not math()"
snippet '\s([a-zA-Z])' "Single letters" rw
 $`!p snip.rv = match.group(1)`$
endsnippet

context "not math()"
snippet '([a-z]?[a-z])\)' "Problem sub lettering" br

\medskip
\indent `!p snip.rv = match.group(1)`)
endsnippet

context "not math()"
snippet '(\d?\d)\.' "Problem numbering" br

\medskip
\noindent `!p snip.rv = match.group(1)`.
endsnippet

snippet today "Date"
`date +%F`
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet eg "Example" b
\begin{eg}
	$0
\end{eg}
endsnippet

snippet exp "Explanation" b
\begin{explanation}
	$0
\end{explanation}
endsnippet

snippet theorem "Theorem" b
\begin{theorem}[${1:label}]
	$0
\end{theorem}
endsnippet

snippet proof "Proof" b
\begin{proof}
	$0
\end{proof}
endsnippet

snippet code "Code" b
\begin{lstlisting}[language=${1:R}]
	$0
\end{lstlisting}
endsnippet

snippet remark "Remark" b
\begin{remark}
	$0
\end{remark}
endsnippet

snippet def "Definition" b
\begin{definition}
	$0
\end{definition}
endsnippet

snippet prop "Proposition" b
\begin{proposition}
	$0
\end{proposition}
endsnippet

snippet lemma "Lemma" b
\begin{lemma}
	$0
\end{lemma}
endsnippet

snippet corrolary "Corrolary" b
\begin{corrolary}
	$0
\end{corrolary}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet () "left( right)" iA
\left(${1:${VISUAL}}\right)$0
endsnippet

snippet || "left| right|" iA
\left|${1:${VISUAL}}\right|$0
endsnippet

snippet {} "left\{ right\}" A
\left\\{${1:${VISUAL}}\right\\}$0
endsnippet

snippet [] "left[ right]" iA
\left[${1:${VISUAL}}\right]$0
endsnippet

snippet <> "leftangle rightangle" iA
\left<${1:${VISUAL}}\right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet


priority 100
context "math()"
snippet int "integral" wA
\int $0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:}}^{${2:}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet | "mid" i
 \mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\mathbb{O}
endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{\text{$1}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{\text{`!p snip.rv=match.group(1)`}}
endsnippet
